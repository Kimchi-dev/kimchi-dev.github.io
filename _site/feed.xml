<feed xmlns="http://www.w3.org/2005/Atom"> <id>http://localhost:4000</id><title>Kimchi-dev</title><subtitle>A developer, falled into puddle.</subtitle> <updated>2020-12-09T12:15:49+00:00</updated> <author> <name>Kimchi-dev</name> <uri>http://localhost:4000</uri> </author><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000" rel="alternate" type="text/html" /> <generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator> <rights> © 2020 Kimchi-dev </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>-Spring- lombok 설치</title><link href="http://localhost:4000/posts/Spring_lombok/" rel="alternate" type="text/html" title="-Spring- lombok 설치" /><published>2020-12-09T12:10:00+00:00</published> <updated>2020-12-09T12:15:49+00:00</updated> <id>http://localhost:4000/posts/Spring_lombok/</id> <content src="http://localhost:4000/posts/Spring_lombok/" /> <author> <name>Kimchi-dev</name> </author> <category term="Development" /> <category term="Spring" /> <summary> Spring,Spring boot 에서 dependency 만 추가한다고 lombok 이 적용 되지는 않습니다. lombok 의 필요성 프로젝트를 수행하다보면 spring은 자바로 해야하기 때문에 명시적으로 사용할 것 이다 라고 해줘야 하는 경우가 많습니다. 특히 VO(dto)같은 경우는 getter와 setter 가 거의 필수적으로 필요하기 때문이...</summary> </entry> <entry><title>-Mysql- NodeJS 연동 에러</title><link href="http://localhost:4000/posts/node_mysql_error/" rel="alternate" type="text/html" title="-Mysql- NodeJS 연동 에러" /><published>2020-12-05T02:48:00+00:00</published> <updated>2020-12-09T12:15:49+00:00</updated> <id>http://localhost:4000/posts/node_mysql_error/</id> <content src="http://localhost:4000/posts/node_mysql_error/" /> <author> <name>Kimchi-dev</name> </author> <category term="Development" /> <category term="Mysql" /> <summary> Node에서 Mysql모듈 사용 시 Error: ER_NOT_SUPPORTED_AUTH_MODE: Client does not support authentication protocol requested by server; consider upgrading MySQL client 에러가 발생합니다. 현재 Mysql version이 8.x 일때 이런 ...</summary> </entry> <entry><title>-React- Mysql 연동 -1/2-</title><link href="http://localhost:4000/posts/React_Mysql/" rel="alternate" type="text/html" title="-React- Mysql 연동 -1/2-" /><published>2020-11-28T12:18:00+00:00</published> <updated>2020-12-09T12:15:49+00:00</updated> <id>http://localhost:4000/posts/React_Mysql/</id> <content src="http://localhost:4000/posts/React_Mysql/" /> <author> <name>Kimchi-dev</name> </author> <category term="Development" /> <category term="React" /> <summary> Mysql 에서 데이터를 받아와 서버에서 뷰로 전송합니다. 본글은 실제로 연동에 필요한 정보들만 입력하므로 테이블 생성은 다루지않습니다. MySQL Installation 1 my_react&amp;gt; npm install --save mysql 위의 명령어로 mysql 모듈을 설치합니다. database.json 생성 Database접...</summary> </entry> <entry><title>-Flutter- 당겨지는 리스트 (AlwaysScrollableScrollPhysics property)</title><link href="http://localhost:4000/posts/flutter_bouncingList/" rel="alternate" type="text/html" title="-Flutter- 당겨지는 리스트 (AlwaysScrollableScrollPhysics property)" /><published>2020-11-24T08:20:00+00:00</published> <updated>2020-12-09T12:15:49+00:00</updated> <id>http://localhost:4000/posts/flutter_bouncingList/</id> <content src="http://localhost:4000/posts/flutter_bouncingList/" /> <author> <name>Kimchi-dev</name> </author> <category term="Development" /> <category term="Flutter" /> <summary> IOS에서 리스트를 당기면 고무줄 처럼 다시돌아오는 기능을 플러터에서 구현합니다. 먼저 적용 이미지 입니다. 다음의 코드입니다. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 ...</summary> </entry> <entry><title>-React- Express(Node.js)와 연동하기 -1/2-</title><link href="http://localhost:4000/posts/Express/" rel="alternate" type="text/html" title="-React- Express(Node.js)와 연동하기 -1/2-" /><published>2020-11-22T08:56:00+00:00</published> <updated>2020-12-09T12:15:49+00:00</updated> <id>http://localhost:4000/posts/Express/</id> <content src="http://localhost:4000/posts/Express/" /> <author> <name>Kimchi-dev</name> </author> <category term="Development" /> <category term="React" /> <summary> React로 화면을 구성하였다면 Express로 서버를 구성합시다. 파일준비 안녕하세요. 이번시간은 Express로 서버를 구성 해보도록 하겠습니다. 다음의 구조처럼 Directory를 변경해줍니다. 1 2 3 4 C: └ my_react └ client └ 기존 my_react 에 있던 file들 my_react 에...</summary> </entry> </feed>
